input {
  syslog {
    host => "0.0.0.0"
    port => 5011
  }
}

filter {
  ruby {
    code => "event['timelogstash'] = event.timestamp.time.localtime.strftime('%Y-%m-%d')"
  }
  grok {
    patterns_dir => ["./patterns"]
    match => { "message" => "<%{INT}>%{SPACE}%{SYSLOGTIMESTAMP:time}%{SPACE}%{HOSTNAME:hostname}%{SPACE}%{HOSTNAME:containerid}//%{HOSTNAME:appid}/%{HOSTNAME:taskid}\[%{INT:progressid}\]:%{SPACE}%{GREEDYDATA:log}" }
    remove_field => ["priority", "severity", "facility", "facility_label", "severity_label", "@version", "message"]
  }
}

output {
  if "_grokparsefailure" not in [tags] {
#    stdout { codec => rubydebug }
    elasticsearch {
      host => "10.3.35.20"
      port => "9200"
      protocol => "http"
      index => "dataman-%{timelogstash}"
      document_type => "dataman-%{appid}"
      template => "/usr/local/logstash/conf/logstash.json"
      template_name => "dataman"
      template_overwrite => "true"
    }
  }
}
